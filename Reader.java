import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.FileReader;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.lang.NullPointerException;
import java.lang.NumberFormatException;
import java.lang.String;
import java.lang.System;
import java.lang.Runtime;

class Reader {
	private static PrintWriter writeToFile;
	private static BufferedReader readFile;
	private static int max = 8;

	public static void main(String[] args)throws IOException {
		String inputFilename = "";
		String outputFilename = "autoGeneratedpassword.txt";

		if(args.length < 1 || args[0].equals( "--help")) {
			System.out.println("Developed by Md Monabbar Anjum\n"+
					"-f : input file\n"+
					"-w : output file (default = \"autoGeneratedPassword.txt\")\n"+
					"-n : maximum character from each line(default = 8)\n"+
					"--help : to get Help"
					);
			System.exit(0);
		}
		else{
			boolean reading = false;
			char option = 0;
			for(int i = 0; i < args.length; i++) {

				if(args[i].startsWith("-") && !reading) {
					option = args[i].charAt(1);
					reading = !reading;
				}
				else if(!reading) {
					System.out.println("you cannot enter character without entring option"+
							"\ntry --help");
					System.exit(0);
				}
				else {
					reading = false;
					switch(option) {
						case 'f':
						inputFilename = args[i];
						break;

						case 'w':
							outputFilename = args[i];
							break;

						case 'n':
							try{

							max = Integer.parseInt(args[i]);
							max = max > 16 ? 15: max;

							} catch (NumberFormatException nfe) {
								System.out.println("maximum number is not properly formated\f we accept only decimal number");
								System.exit(0);
							}
							break;

						default:
							System.out.println("Wrong Option"+
									"try --help");
							System.exit(0);
					}
				}
			}
		}

		// making writable file
		try {
			writeToFile = new PrintWriter(outputFilename);
			readFile = new BufferedReader(new FileReader(inputFilename));
		}
		catch(FileNotFoundException e) 
		{ System.out.println("Cannot Find the file you provided");
			System.exit(0);
		}
	       	catch(Exception e) {
		     System.out.println("Cannot Create a file");
		     System.out.println("Need Sudo Permission");
		     System.exit(0);
		}

			process(readFile, writeToFile, max);
			writeToFile.close();
	}
	
	private static void process(BufferedReader read, PrintWriter write, int max) throws IOException{
		String temp = null;
		while((temp = read.readLine()) != null)
		{
			if(temp.length() >= max)
				write.write(temp+"\n");
		}
		System.gc();
	}
}
